plugins {
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.google.cloud.tools.jib' version '3.4.1'
    id 'com.google.protobuf' version '0.9.4'
}

group = 'guru.ga'
version = 'unspecified'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.grpc:spring-grpc-dependencies:0.9.0-SNAPSHOT'
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "org.springframework.cloud:spring-cloud-starter-vault-config:${project.ext.springVaultVersion}"
    implementation "org.flywaydb:flyway-core:${project.ext.flywayVersion}"
    implementation "org.flywaydb:flyway-database-postgresql:${project.ext.flywayVersion}"
    annotationProcessor "org.projectlombok:lombok:${project.ext.lombokVersion}"
    compileOnly "org.projectlombok:lombok:${project.ext.lombokVersion}"
    runtimeOnly "org.postgresql:postgresql:${project.ext.postgresDriverVersion}"

    //grpc
    implementation "net.devh:grpc-server-spring-boot-starter:${project.ext.springGrpcVersion}"
    implementation 'io.grpc:grpc-services'
    implementation "com.google.protobuf:protobuf-java:${dependencyManagement.importedProperties['protobuf-java.version']}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "com.h2database:h2:${project.ext.h2Version}"
    testImplementation "org.mockito:mockito-core:${project.ext.mockitoVersion}"
    testImplementation("org.mockito:mockito-junit-jupiter:${project.ext.mockitoVersion}") {
        exclude group: "org.junit.jupiter"
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${dependencyManagement.importedProperties['protobuf-java.version']}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${dependencyManagement.importedProperties['grpc.version']}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {
                option 'jakarta_omit'
                option '@generated=omit'
            }
        }
    }
}

test {
    useJUnitPlatform()
}